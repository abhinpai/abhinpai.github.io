(window.webpackJsonp=window.webpackJsonp||[]).push([[30],{131:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return c})),a.d(t,"rightToc",(function(){return l})),a.d(t,"CWord",(function(){return b})),a.d(t,"BulletSentence",(function(){return s})),a.d(t,"default",(function(){return p}));var n=a(2),o=a(6),r=(a(0),a(138)),i={id:"module1_basic",title:"Basic is the foundation of all programming language \ud83d\ude07",sidebar_label:"Module 1: Basics"},c={id:"javascript/modules/module1_basic",title:"Basic is the foundation of all programming language \ud83d\ude07",description:"1. let vs const vs var",source:"@site/docs/javascript/modules/m1_basic.md",permalink:"/docs/javascript/modules/module1_basic",lastUpdatedBy:"Abhin Pai",lastUpdatedAt:1593029096,sidebar_label:"Module 1: Basics",sidebar:"docs",previous:{title:"\ud83d\udee1 Javascript Battalion  \ud83d\udee1",permalink:"/docs/javascript/js_index"},next:{title:"Hello i am an Object \ud83d\udc4b",permalink:"/docs/javascript/modules/module3_object"}},l=[{value:"A Story of <code>var</code>, <code>let</code> and <code>const</code>",id:"a-story-of-var-let-and-const",children:[{value:"The Story of Var \ud83c\udf08",id:"the-story-of-var-",children:[]},{value:"<code>let</code> it go",id:"let-it-go",children:[]},{value:"How about the <code>const</code>",id:"how-about-the-const",children:[]}]},{value:"Hey i&#39;m very strict \ud83d\udc6e\ud83c\udffb\u200d\u2642\ufe0f",id:"hey-im-very-strict-\u2642\ufe0f",children:[]},{value:"Untold story of operator \ud83e\uddd1\ud83c\udffb\u200d\ud83d\ude80",id:"untold-story-of-operator-\ud83e\uddd1",children:[{value:"<code>==</code> Operator",id:"-operator",children:[]},{value:"<code>===</code> Operator",id:"-operator-1",children:[]},{value:"<code>!!</code> Double negation Operator",id:"-double-negation-operator",children:[]}]}],b=function(e){var t=e.children,a=e.color;return Object(r.b)("span",{style:{color:a}},t)},s=function(e){var t=e.children,a=e.keyword;return Object(r.b)("p",{style:{fontSize:"22px",margin:"0"}},Object(r.b)("span",{style:{backgroundColor:"#0090d9",borderRadius:"6px",margin:"0",paddingLeft:"6px",paddingRight:"6px",color:"white",paddingBottom:"2px"}},a,":"),"  ",t)},d={rightToc:l,CWord:b,BulletSentence:s};function p(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},d,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("br",null),Object(r.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Possible Interview Questions \ud83d\udd0e")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ol",{parentName:"div"},Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"let")," vs ",Object(r.b)("inlineCode",{parentName:"li"},"const")," vs ",Object(r.b)("inlineCode",{parentName:"li"},"var")),Object(r.b)("li",{parentName:"ol"},"What is ",Object(r.b)("inlineCode",{parentName:"li"},"Temporal Dead Zone")," or ",Object(r.b)("inlineCode",{parentName:"li"},"TDZ"),"? How that Occur?"),Object(r.b)("li",{parentName:"ol"},"How ",Object(r.b)("inlineCode",{parentName:"li"},"let")," work in for loop when let doesn't allow reassignment?"),Object(r.b)("li",{parentName:"ol"},"is ",Object(r.b)("inlineCode",{parentName:"li"},"var")," Dead? What should I use? "),Object(r.b)("li",{parentName:"ol"},"How ",Object(r.b)("inlineCode",{parentName:"li"},"let")," and ",Object(r.b)("inlineCode",{parentName:"li"},"const")," is scoped in Js? "),Object(r.b)("li",{parentName:"ol"},"What is the purpose of ",Object(r.b)("inlineCode",{parentName:"li"},"use strict"),"?"),Object(r.b)("li",{parentName:"ol"},"What does the double negation operator ",Object(r.b)("inlineCode",{parentName:"li"},"!!")," do?"),Object(r.b)("li",{parentName:"ol"},Object(r.b)("inlineCode",{parentName:"li"},"==")," vs ",Object(r.b)("inlineCode",{parentName:"li"},"==="))))),Object(r.b)("h2",{id:"a-story-of-var-let-and-const"},"A Story of ",Object(r.b)("inlineCode",{parentName:"h2"},"var"),", ",Object(r.b)("inlineCode",{parentName:"h2"},"let")," and ",Object(r.b)("inlineCode",{parentName:"h2"},"const")),Object(r.b)("hr",null),Object(r.b)(s,{keyword:"var",mdxType:"BulletSentence"},"An old school technique to declare a variable"),Object(r.b)(s,{keyword:"let",mdxType:"BulletSentence"},"An alternative to var and its a modern way to declare any variable"),Object(r.b)(s,{keyword:"const",mdxType:"BulletSentence"},"Const values never gonna be replace once its declared"),Object(r.b)("h3",{id:"the-story-of-var-"},"The Story of Var \ud83c\udf08"),Object(r.b)("p",null,"A variable can be declare as ",Object(r.b)("inlineCode",{parentName:"p"},"var")," or ",Object(r.b)("inlineCode",{parentName:"p"},"let"),". But even if we declare the variable with let, var is beast in it own way"),Object(r.b)("p",null,"\ud83d\udd38 ",Object(r.b)("inlineCode",{parentName:"p"},"var")," has no block scope meaning it can be access globally ",Object(r.b)("em",{parentName:"p"},"(its subjective to strict mode)")),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-ts"}),'// var accessibility\nif (true) {\n  var superHero = "Super Man \ud83e\uddb8\ud83c\udffb\u200d\u2642\ufe0f";\n}\n\nconsole.log(superHero); // Super Man \ud83e\uddb8\ud83c\udffb\u200d\u2642\ufe0f\n// The Variable scope still present outside the function block as well\n\n// let accessibility\nif (true) {\n  let superHero = "Super Man \ud83e\uddb8\ud83c\udffb\u200d\u2642\ufe0f";\n}\n\nconsole.log(superHero); // Error \u274c, undefined\n// let scope is restricted to the block\n')),Object(r.b)("p",null,"If a codeblock is inside a function then scope will remain to the function level"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"function IAmIronMan() {\n  if (true) {\n    var isHeIronMan = true;\n  }\n  console.log(isHeIronMan);\n}\n\nIAmIronMan(); // true \u2705\nconsole.log(isHeIronMan); // ReferenceError: isHeIronMan is not defined\n")),Object(r.b)("p",null,"If ",Object(r.b)("inlineCode",{parentName:"p"},"var")," declared outside any function or block that instance will be assigned to the global object. which means a ",Object(r.b)("inlineCode",{parentName:"p"},"window")," object inside the browser and ",Object(r.b)("inlineCode",{parentName:"p"},"global")," object in node"),Object(r.b)("p",null,"\ud83d\udd38 ",Object(r.b)("inlineCode",{parentName:"p"},"var")," do tolerate re-declaration"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'// var ignore and replace the old value with a new one\nvar superHero = "Iron Man";\nvar superHero = "Batman"; // Works pretty fine\n\n// let is very arrogant\nlet superHero = "Iron Man";\nlet superHero = "Batman"; // SyntaxError: Identifier \'superHero\' has already been declared\n')),Object(r.b)("p",null,"\ud83d\udd38 ",Object(r.b)("inlineCode",{parentName:"p"},"var")," variable(s) can be declare below their use"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'// Example 1\nfunction whoAmI() {\n  superHero = "Iron Man";\n  console.log(superHero);\n  var superHero; // declaration is done after initialization \ud83d\udece\n}\n\n// Example 2\nfunction whoAmI() {\n  superHero = "Hulk";\n  if (true) {\n    var superHero; // declaration is done after initialization \ud83d\udece\n  }\n  console.log(superHero);\n}\n')),Object(r.b)("p",null,"This behavior is called ",Object(r.b)("inlineCode",{parentName:"p"},"Hoisting")," (Raising) where all ",Object(r.b)("inlineCode",{parentName:"p"},"var")," are hoisted at global context"),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"Note \ud83d\udcdd")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"Only declaration can be Hoist not an assignment"),Object(r.b)("li",{parentName:"ul"},"During the execution all the variable declaration will go at the top of execution context")))),Object(r.b)("h3",{id:"let-it-go"},Object(r.b)("inlineCode",{parentName:"h3"},"let")," it go"),Object(r.b)("p",null,"\ud83d\udd38 ",Object(r.b)("strong",{parentName:"p"},"let")," has a sensible scoping. Once the scope is declare the scope will remain in its own block ",Object(r.b)("br",null),"\n\ud83d\udd38 ",Object(r.b)("strong",{parentName:"p"},"let")," don't allow re-declaration"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'let superHero = "Iron Man";\nlet superHero = "Batman"; // SyntaxError: Identifier \'superHero\' has already been declared\n')),Object(r.b)("p",null,"\ud83d\udd38 If we declare variable with ",Object(r.b)("strong",{parentName:"p"},"let")," it will not be attach to the global scope hence it will not be reachable\noutside the file ",Object(r.b)("br",null),"\n\ud83d\udd38 ",Object(r.b)("strong",{parentName:"p"},"let")," in the loop can re-bind in each iteration making sure to reassign the value from the end of previous iteration"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"for (let i = 0; i < 5; i++) {\n  console.log(i); // print 0,1,2,3,4\n}\n")),Object(r.b)("p",null,"What the heck \ud83e\udd2f how is that even working when let wont allow re-assignment \ud83e\udd14"),Object(r.b)("div",{className:"admonition admonition-danger alert alert--danger"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M5.05.31c.81 2.17.41 3.38-.52 4.31C3.55 5.67 1.98 6.45.9 7.98c-1.45 2.05-1.7 6.53 3.53 7.7-2.2-1.16-2.67-4.52-.3-6.61-.61 2.03.53 3.33 1.94 2.86 1.39-.47 2.3.53 2.27 1.67-.02.78-.31 1.44-1.13 1.81 3.42-.59 4.78-3.42 4.78-5.56 0-2.84-2.53-3.22-1.25-5.61-1.52.13-2.03 1.13-1.89 2.75.09 1.08-1.02 1.8-1.86 1.33-.67-.41-.66-1.19-.06-1.78C8.18 5.31 8.68 2.45 5.05.32L5.03.3l.02.01z"})))),"TBU")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Add behind scene of for loop with let"))),Object(r.b)("h3",{id:"how-about-the-const"},"How about the ",Object(r.b)("inlineCode",{parentName:"h3"},"const")),Object(r.b)("p",null,"\ud83d\udd38 ",Object(r.b)("strong",{parentName:"p"},"const")," variables are immutable, once declare you cant change ",Object(r.b)("br",null),"\n\ud83d\udd38 Scope of the ",Object(r.b)("strong",{parentName:"p"},"const")," variable will remain inside the block ",Object(r.b)("br",null),"\n\ud83d\udd38 ",Object(r.b)("strong",{parentName:"p"},"const")," variables are not hoisted  ",Object(r.b)("br",null),"\n\ud83d\udd38 we can't reach to the ",Object(r.b)("strong",{parentName:"p"},"const")," by ",Object(r.b)("inlineCode",{parentName:"p"},"this")," keyword  ",Object(r.b)("br",null),"\n\ud83d\udd38 If you declare ",Object(r.b)("inlineCode",{parentName:"p"},"const")," to an object you will not be able to delete that object rather\nyou will be able to declare, reassign or even delete value of the constant object"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'const marvelHero = {\n  heroName: "Iron Man",\n  actorName: "Robert, Jr.",\n};\n\nmarvelHero = {}; // can\'t assign to marvelHero because its constant\n\nmarvelHero.characterName = "Tony Stark"; // Assigning new property to an object\n\ndelete marvelHero.heroName; // Deleting { heroName: "Iron Man",}\n\nconsole.log(marvelHero); // { actorName: "Robert, Jr.", characterName: "Tony Stark" }\n')),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Pro Tip \ud83d\udca1")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"  If we try to read or write ",Object(r.b)("inlineCode",{parentName:"p"},"let")," or ",Object(r.b)("inlineCode",{parentName:"p"},"const")," variable before its declaration and initialization an error\nwill raise. This phenomenon is called ",Object(r.b)("inlineCode",{parentName:"p"},"Temporal Dead Zone")," or ",Object(r.b)("inlineCode",{parentName:"p"},"TDZ")))),Object(r.b)("h2",{id:"hey-im-very-strict-\u2642\ufe0f"},"Hey i'm very strict \ud83d\udc6e\ud83c\udffb\u200d\u2642\ufe0f"),Object(r.b)("hr",null),Object(r.b)("p",null,Object(r.b)("inlineCode",{parentName:"p"},"use strict")," is a literal expression to enable strict mode in coding. This strict context prevents certain actions from being taken and throws more exceptions."),Object(r.b)("p",null,"\ud83d\udd38In early javascript it was allowed to use write code how ever we want "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"year = 2020; \nconsole.log(year); // 2020, print the result even if you don't declare\n")),Object(r.b)("p",null,"but when you use strict mode at the top of the strict its not possible to write code however we want"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),"'use strict'\nyear = 2020; \nconsole.log(year); // 'year' is not declared\n")),Object(r.b)("p",null,"\ud83d\udd38Strict mode will help to prevent the unexpected errors, exception which can arise during runtime of the application",Object(r.b)("br",null),"\n\ud83d\udd38",Object(r.b)("strong",{parentName:"p"},"use strict")," is very helpful to avoid a conflict between variable. If we missed to declare it will notify a developer"),Object(r.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"})))),"Remember \ud83e\udde0")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},Object(r.b)("inlineCode",{parentName:"li"},"use strict")," should always declare at the top of a script to enable throughout the script or declare inside a block to enable only for a block. It wont work if we declare somewhere else"),Object(r.b)("li",{parentName:"ul"},"There is no way to cancel a strict mode"),Object(r.b)("li",{parentName:"ul"},"Strict mode can be eliminate from modern scripting language, Infact modern language and framework internally does it for you")))),Object(r.b)("h2",{id:"untold-story-of-operator-\ud83e\uddd1"},"Untold story of operator \ud83e\uddd1\ud83c\udffb\u200d\ud83d\ude80"),Object(r.b)("hr",null),Object(r.b)("p",null,"Both == and === operator serve the same purpose which is to check the object equality"),Object(r.b)("h3",{id:"-operator"},Object(r.b)("inlineCode",{parentName:"h3"},"==")," Operator"),Object(r.b)("p",null,"\ud83d\udd38== is operator is very loose. It only care about a content even if type is mismatch it wont boughter "),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'"4" == 4; // return  true\n')),Object(r.b)("p",null,"Behind the scene javascript convert the string into a number and the equate them this is called ",Object(r.b)("inlineCode",{parentName:"p"},"COERCION")),Object(r.b)("h3",{id:"-operator-1"},Object(r.b)("inlineCode",{parentName:"h3"},"===")," Operator"),Object(r.b)("p",null,"\ud83d\udd38 === is super strict. It want both content and type should equal"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-js"}),'"4" === 4; // return  false\n"4" === "4"; // return true\n')),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-heading"}),Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",Object(n.a)({parentName:"h5"},{className:"admonition-icon"}),Object(r.b)("svg",Object(n.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(r.b)("path",Object(n.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Recommendation ")),Object(r.b)("div",Object(n.a)({parentName:"div"},{className:"admonition-content"}),Object(r.b)("p",{parentName:"div"},"Always prefer to use ",Object(r.b)("inlineCode",{parentName:"p"},"===")," instead of ",Object(r.b)("inlineCode",{parentName:"p"},"==")," because ",Object(r.b)("inlineCode",{parentName:"p"},"==")," is fickle and quickly leads to a hidden bugs"))),Object(r.b)("p",null,"Same goes for ",Object(r.b)("inlineCode",{parentName:"p"},"!=")," and ",Object(r.b)("inlineCode",{parentName:"p"},"!==")," which perform same things but negate"),Object(r.b)("h3",{id:"-double-negation-operator"},Object(r.b)("inlineCode",{parentName:"h3"},"!!")," Double negation Operator"),Object(r.b)("p",null,"\ud83d\udd38 Suppose you have an expression which gives result & if you want that result to be boolean (true/false)\nthen ",Object(r.b)("inlineCode",{parentName:"p"},"!!")," is the solution ",Object(r.b)("br",null),"\n\ud83d\udd38 If you wan to get ",Object(r.b)("inlineCode",{parentName:"p"},"True")," or ",Object(r.b)("inlineCode",{parentName:"p"},"False")," from Not a string, 0, empty string, undefined, NAN or something else",Object(r.b)("br",null),"\n\ud83d\udd38 In reality there is no ",Object(r.b)("inlineCode",{parentName:"p"},"!!")," operator in javascript. Its just one negate after another negate.\nIt just negate the result then negate it again.",Object(r.b)("br",null)))}p.isMDXComponent=!0}}]);