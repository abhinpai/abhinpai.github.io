(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{116:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return b})),n.d(t,"rightToc",(function(){return o})),n.d(t,"default",(function(){return s}));var a=n(2),i=n(6),l=(n(0),n(138)),r={id:"module4_datatypes",title:"Does type matters \ud83e\udd14",sidebar_label:"Module 4: Data Types",description:"Data types description",keywords:["DataType","Primitive","Non-Primitive"]},b={id:"javascript/modules/module4_datatypes",title:"Does type matters \ud83e\udd14",description:"Data types description",source:"@site/docs/javascript/modules/m4_datatypes.md",permalink:"/docs/javascript/modules/module4_datatypes",lastUpdatedBy:"Abhin Pai",lastUpdatedAt:1592946008,sidebar_label:"Module 4: Data Types",sidebar:"docs",previous:{title:"Hello i am an Object \ud83d\udc4b",permalink:"/docs/javascript/modules/module3_object"},next:{title:"\ud83c\udfa8 UI Resources \ud83d\udd8d",permalink:"/docs/ui_res"}},o=[{value:"Primitive Datatype",id:"primitive-datatype",children:[{value:"1. Boolean",id:"1-boolean",children:[]},{value:"2. Number",id:"2-number",children:[]},{value:"3. BigInt",id:"3-bigint",children:[]},{value:"4. Null",id:"4-null",children:[]},{value:"5. Undefined",id:"5-undefined",children:[]},{value:"5. String",id:"5-string",children:[]},{value:"7. Symbol",id:"7-symbol",children:[]}]},{value:"Non-Primitive Datatype",id:"non-primitive-datatype",children:[]},{value:"Template Literals - Expression Interpolation",id:"template-literals---expression-interpolation",children:[]}],c={rightToc:o};function s(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("div",{className:"admonition admonition-note alert alert--secondary"},Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"})))),"Possible Interview Questions \ud83d\udd0e")),Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("ol",{parentName:"div"},Object(l.b)("li",{parentName:"ol"},"Does JS have have any type or is it strongly typed?"),Object(l.b)("li",{parentName:"ol"},"What are the primitive and non-primitive datatypes?"),Object(l.b)("li",{parentName:"ol"},"What is difference between global.isFinite and Number.isFinite?"),Object(l.b)("li",{parentName:"ol"},"What is difference between global.parseInt/parseFloat and Number.parseInt/parseFloat?"),Object(l.b)("li",{parentName:"ol"},Object(l.b)("inlineCode",{parentName:"li"},"null")," vs ",Object(l.b)("inlineCode",{parentName:"li"},"undefined")),Object(l.b)("li",{parentName:"ol"},"What is array and its methods?"),Object(l.b)("li",{parentName:"ol"},"What is string and its methods?"),Object(l.b)("li",{parentName:"ol"},"Template Literals in JS or String Interpolation?")))),Object(l.b)("p",null,"Yes, type matters a lot in all of the programming language. which is an identity to a variable."),Object(l.b)("p",null,"There is overall 8 different datatype present in Javascript which is further divide into primitive and non-primitive"),Object(l.b)("h2",{id:"primitive-datatype"},"Primitive Datatype"),Object(l.b)("hr",null),Object(l.b)("p",null,"There are 7 primitive datatypes and these datatypes are immutable"),Object(l.b)("h3",{id:"1-boolean"},"1. Boolean"),Object(l.b)("p",null,"Boolean is just a true and false like any other programming language"),Object(l.b)("h3",{id:"2-number"},"2. Number"),Object(l.b)("p",null,"\ud83d\udd38 Numbers represent both integer and floating value along with this two there there are many other types like"),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"Infinity")," represent mathematical \u267e\ufe0f which is special value greater than any number"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"console.log(1/0); // infinity\nconsole.log(Infinity); // Infinity\n")),Object(l.b)("p",null,"\ud83d\udd38",Object(l.b)("inlineCode",{parentName:"p"},"NaN")," (Not a Number) is sticky, If any mathematical operation breaks it will return NaN"),Object(l.b)("div",{className:"admonition admonition-info alert alert--info"},Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"Mathematical operations are safe")),Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"Doing Math is safe in Js. We can divide 1/0, treat non-numeric string or number to the expression, script will never not with fatal error (die). At worst case you can get NaN as a  result"))),Object(l.b)("h4",{id:"number-extension-methods"},"Number Extension Methods"),Object(l.b)("h4",{id:"-binary-and-octal-literals"},"\ud83d\udd38 Binary and Octal Literals"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"console.log(parseInt(101, 2)); // 5\nconsole.log(parseInt(111, 3)); // 13\n")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"0b")," or ",Object(l.b)("inlineCode",{parentName:"p"},"0B")," prefix to number represent binary integer literals"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"console.log(parseInt(0b001)); // 1\nconsole.log(parseInt(0B111)); // 7\n")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"0o")," or ",Object(l.b)("inlineCode",{parentName:"p"},"0O")," prefix to number represent octal integer literals"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"console.log(parseInt(0o001)); // 1\nconsole.log(parseInt(0O111)); // 7\n")),Object(l.b)("p",null,Object(l.b)("inlineCode",{parentName:"p"},"0x")," or ",Object(l.b)("inlineCode",{parentName:"p"},"0X")," prefix to number represent hexadecimal integer literals"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"console.log(parseInt(0x0ff)); // 255\nconsole.log(parseInt(0Xf00)); // 3840\n")),Object(l.b)("h4",{id:"-numberisfinite"},"\ud83d\udd38 Number.isFinite"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"Number.isFinite(NaN); // False\nNumber.isFinite(Infinity); // False\nNumber.isFinite(-Infinity); // False\nNumber.isFinite(1/0); // True\n")),Object(l.b)("div",{className:"admonition admonition-info alert alert--info"},Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-heading"}),Object(l.b)("h5",{parentName:"div"},Object(l.b)("span",Object(a.a)({parentName:"h5"},{className:"admonition-icon"}),Object(l.b)("svg",Object(a.a)({parentName:"span"},{xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"}),Object(l.b)("path",Object(a.a)({parentName:"svg"},{fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"})))),"global.isFinite Vs Number.isFinite ")),Object(l.b)("div",Object(a.a)({parentName:"div"},{className:"admonition-content"}),Object(l.b)("p",{parentName:"div"},"When we execute global.isFinite it internally concise to Number.isFinite and does the same job\nsame for parseInt and parseFloat"))),Object(l.b)("h4",{id:"-numberparseint"},"\ud83d\udd38 Number.parseInt"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"console.log(Number.parseInt(0b001)); // 1\nconsole.log(Number.parseInt(0B111)); // 7\n")),Object(l.b)("h4",{id:"-numberparsefloat"},"\ud83d\udd38 Number.parseFloat"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"console.log(Number.parseFloat(0b001)); // 1\nconsole.log(Number.parseFloat(0B111)); // 7\n")),Object(l.b)("h4",{id:"-numberisinteger"},"\ud83d\udd38 Number.isInteger"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"console.log(Number.isInteger(Infinite)); // False\nconsole.log(Number.isInteger(-1000)); // True\n")),Object(l.b)("h4",{id:"-numberepsilon"},"\ud83d\udd38 Number.EPSILON"),Object(l.b)("p",null,"This is literally small number. "),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),'// Default EPSILON Value\nNumber.EPSILON // 2.220446049250313e-16\n\nNumber.EPSILON.toFixed(20); // "0.00000000000000022204"\n')),Object(l.b)("h3",{id:"3-bigint"},"3. BigInt"),Object(l.b)("p",null,"Number type can not allow value larger than (2^53-1) and lesser than -(2^53-1) for this BigInt is rescuer. "),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"const bigInt = 12345678901234567890n; // 'n' at the end represent bigint\n")),Object(l.b)("h3",{id:"4-null"},"4. Null"),Object(l.b)("p",null,"Null is a special value which doesn't belongs to any of the type. Its separate type all together.\nWhich simply represent zero, empty or nothing."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"In javascript ",Object(l.b)("inlineCode",{parentName:"p"},"null")," is a ",Object(l.b)("strong",{parentName:"p"},"Existing Object")," and doesn't lead to ",Object(l.b)("strong",{parentName:"p"},"Null Pointer Exception"))),Object(l.b)("h3",{id:"5-undefined"},"5. Undefined"),Object(l.b)("p",null,"Undefined in like a null which stand out of the group. Undefined means ",Object(l.b)("strong",{parentName:"p"},"not assigned any value")),Object(l.b)("p",null,"If any variable is declared and used that variable without assigning any value that that will return undefined"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let scientist;\nconsole.log(scientist); // undefined\n")),Object(l.b)("p",null,"Null and undefined both are primitive and falsy value"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let astronomer = null;\nconsole.log(typeOf(astronomer)); // object\n\nlet scientist;\nconsole.log(typeOf(scientist)); // undefined\n")),Object(l.b)("p",null,"Null and undefined both are different type but share some similar functionality"),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"console.log(null == undefined); // true\n\nlet scientist;\nconsole.log(null !== undefined); // true\n")),Object(l.b)("p",null,"double equal test for the loose equality and perform ",Object(l.b)("inlineCode",{parentName:"p"},"type coercion"),"."),Object(l.b)("blockquote",null,Object(l.b)("p",{parentName:"blockquote"},"Javascript is both dynamically typed language meaning its strongly and weakly typed game. And all the master game is being played by ",Object(l.b)("inlineCode",{parentName:"p"},"COERCION"),". This is kind of debatable topic")),Object(l.b)("h3",{id:"5-string"},"5. String"),Object(l.b)("p",null,"String datatype is most commonly used datatype to store textual data. In javascript there is no separate type for single character ",Object(l.b)("inlineCode",{parentName:"p"},"char")," like any other programming language."),Object(l.b)("h4",{id:"string-extension-methods"},"String Extension Methods"),Object(l.b)("h4",{id:"charat"},"\ud83d\udd38charAt"),Object(l.b)("p",null,"Return character for a given index (subscript) value ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"touppercase"},"\ud83d\udd38toUpperCase"),Object(l.b)("p",null,"Convert sting to uppercase ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"tolowercase"},"\ud83d\udd38toLowerCase"),Object(l.b)("p",null,"Convert string to lowercase ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"indexof"},"\ud83d\udd38indexOf"),Object(l.b)("p",null,"Get the index of given character from the beginning of the string  ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"lastindexof"},"\ud83d\udd38lastIndexOf"),Object(l.b)("p",null,"Get the index of given character from the end of the string  ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"include"},"\ud83d\udd38include"),Object(l.b)("p",null,"Check if string include given string or not and return true or false ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"startwith"},"\ud83d\udd38startWith"),Object(l.b)("p",null,"Check if any string start with given string or not and return true or false ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"endswith"},"\ud83d\udd38endsWith"),Object(l.b)("p",null,"Check if any string ends with given string or not and return true or false ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"slice"},"\ud83d\udd38slice"),Object(l.b)("p",null,"Break the string based on given character and return an array ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"substring"},"\ud83d\udd38subString"),Object(l.b)("p",null,"Return part of the string ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"codepointat"},"\ud83d\udd38codePointAt"),Object(l.b)("p",null,"Return code for the character at position ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"framecodepoint"},"\ud83d\udd38frameCodePoint"),Object(l.b)("p",null,"Create character by its numeric code ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"padstart"},"\ud83d\udd38padStart"),Object(l.b)("p",null,"Add space at the beginning of the string based on the given value ",Object(l.b)("br",null)),Object(l.b)("h4",{id:"padend"},"\ud83d\udd38padEnd"),Object(l.b)("p",null,"Add space at the end of the string based on the given value ",Object(l.b)("br",null)),Object(l.b)("h3",{id:"7-symbol"},"7. Symbol"),Object(l.b)("h2",{id:"non-primitive-datatype"},"Non-Primitive Datatype"),Object(l.b)("p",null,"Apart from 7 primitive datatype everything else is an Object in javascript ",Object(l.b)("br",null),"\n",Object(l.b)("strong",{parentName:"p"},"Ex:")," Array, function, Object, Set, Regexp etc are Object"),Object(l.b)("h2",{id:"template-literals---expression-interpolation"},"Template Literals - Expression Interpolation"),Object(l.b)("p",null,"\ud83d\udd38 We can use ",Object(l.b)("inlineCode",{parentName:"p"},"+")," to concat a multiple string to construct a single string "),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let number = '3000';\nlet hero = 'Iron Man';\nconsole.log(\"I love\" + number + \"Says\" + hero); // I Love 3000 Says Iron Man ;\n")),Object(l.b)("p",null,"\ud83d\udd38 To make it more robust we can use ",Object(l.b)("inlineCode",{parentName:"p"},"String Interpolation")),Object(l.b)("pre",null,Object(l.b)("code",Object(a.a)({parentName:"pre"},{className:"language-js"}),"let number = '3000';\nlet hero = 'Iron Man';\nconsole.log(`I love ${number} Says ${hero}`); // I Love 3000 says Iron Man;\n")))}s.isMDXComponent=!0}}]);